// Copyright (C) 2018 ConsenSys AG
//
// This file is part of uPort Mobile App.
//
// uPort Mobile App is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// uPort Mobile App is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with uPort Mobile App.  If not, see <http://www.gnu.org/licenses/>.
//
// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"userKey","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"newUserKey","type":"address"}],"name":"updateUserKey","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"adminKey","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"referenceNonce","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"destination","type":"address"},{"name":"value","type":"uint256"},{"name":"data","type":"bytes"},{"name":"nonce","type":"uint256"},{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"name":"sendTx","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"proxy","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"newAdminKey","type":"address"}],"name":"updateAdminKey","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function"},{"inputs":[{"name":"proxyAddress","type":"address"},{"name":"_userKey","type":"address"},{"name":"_adminKey","type":"address"}],"type":"constructor"}],
    binary: "606060405260405160608061046c83395060c06040525160805160a05160008054600160a060020a031990811685178255600180548216851790556002805490911683179055600355505050610413806100596000396000f36060604052361561006c5760e060020a60003504631c1c2289811461006e5780632281dad614610080578063233044d0146100c25780636e7b6746146100d4578063df265a3b146100dd578063ec55688914610304578063ec57ef8214610316578063f2fde38b14610357575b005b6103e4600154600160a060020a031681565b61006c600435600254600160a060020a039081169033168114156100be576001805473ffffffffffffffffffffffffffffffffffffffff1916831790555b5050565b6103e4600254600160a060020a031681565b61040160035481565b604080516020604435600481810135601f810184900484028501840190955284845261006c94813594602480359593946064949293910191819084018382808284375094965050933593505060843591505060a43560c43560006000888860010287600102896040518085600160a060020a03166c0100000000000000000000000002815260140184600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f1509050019450505050506040518091039020915060018286868660405180856000191681526020018460ff16815260200183600019168152602001826000191681526020019450505050506020604051808303816000866161da5a03f11561000257505060405151600354909150861480156102215750600154600160a060020a038281169116145b156102f957600060009054906101000a9004600160a060020a0316600160a060020a031663d7f31eb98a8a8a6040518460e060020a0281526004018084600160a060020a03168152602001838152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102ce5780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000876161da5a03f115610002575050600380546001019055505b505050505050505050565b6103e4600054600160a060020a031681565b61006c600435600254600160a060020a039081169033168114156100be576002805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b61006c600435600254600160a060020a039081169033168114156100be5760008054604080517f1a695230000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015291519290911692631a69523092602483810193829003018183876161da5a03f1156100025750505081600160a060020a0316ff5b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f3",
    unlinked_binary: "606060405260405160608061046c83395060c06040525160805160a05160008054600160a060020a031990811685178255600180548216851790556002805490911683179055600355505050610413806100596000396000f36060604052361561006c5760e060020a60003504631c1c2289811461006e5780632281dad614610080578063233044d0146100c25780636e7b6746146100d4578063df265a3b146100dd578063ec55688914610304578063ec57ef8214610316578063f2fde38b14610357575b005b6103e4600154600160a060020a031681565b61006c600435600254600160a060020a039081169033168114156100be576001805473ffffffffffffffffffffffffffffffffffffffff1916831790555b5050565b6103e4600254600160a060020a031681565b61040160035481565b604080516020604435600481810135601f810184900484028501840190955284845261006c94813594602480359593946064949293910191819084018382808284375094965050933593505060843591505060a43560c43560006000888860010287600102896040518085600160a060020a03166c0100000000000000000000000002815260140184600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f1509050019450505050506040518091039020915060018286868660405180856000191681526020018460ff16815260200183600019168152602001826000191681526020019450505050506020604051808303816000866161da5a03f11561000257505060405151600354909150861480156102215750600154600160a060020a038281169116145b156102f957600060009054906101000a9004600160a060020a0316600160a060020a031663d7f31eb98a8a8a6040518460e060020a0281526004018084600160a060020a03168152602001838152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102ce5780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000876161da5a03f115610002575050600380546001019055505b505050505050505050565b6103e4600054600160a060020a031681565b61006c600435600254600160a060020a039081169033168114156100be576002805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b61006c600435600254600160a060020a039081169033168114156100be5760008054604080517f1a695230000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015291519290911692631a69523092602483810193829003018183876161da5a03f1156100025750505081600160a060020a0316ff5b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f3",
    address: "",
    generated_with: "2.0.9",
    contract_name: "MetaTxController"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MetaTxController error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaTxController error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaTxController error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaTxController error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MetaTxController = Contract;
  }

})();
